/home/anism/Téléchargements/TOP_PROJET_ETUDIANT/simu_simple_LBM/lbm_struct.h: 116 - 116
--------------------------------------------------------------------------------

116: 	return &mesh->cells[ (x * mesh->height + y) * DIRECTIONS ];
/home/anism/Téléchargements/TOP_PROJET_ETUDIANT/simu_simple_LBM/lbm_phys.c: 51 - 321
--------------------------------------------------------------------------------

51: 		res += vect1[k] * vect2[k];
[...]
68: 	assert( cell != NULL );
69: 
70: 	//loop on directions
71: 	for( k = 0 ; k < DIRECTIONS ; k++)
72: 		res += cell[k];
[...]
101: 			v[d] += cell[k] * direction_matrix[k][d];
102: 
103: 		//normalize
104: 		v[d] = v[d] / cell_density;
[...]
132: 	feq = 1.0
133: 		+ (3.0 * p)
134: 		+ ((9.0 / 2.0) * p2)
135: 		- ((3.0 / 2.0) * v2);
136: 
137: 	//mult all by density and direction weight
138: 	feq *= equil_weight[direction] * density;
[...]
165: 		cell_out[k] = cell_in[k] - RELAX_PARAMETER * (cell_in[k] - feq);
[...]
321: 		for( i = 1 ; i < mesh_in->width - 1 ; i++ )
